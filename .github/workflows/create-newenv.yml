name: Environment Request

on:
  issues:
    types: [opened]

jobs:
  handle-request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Save issue body to file
        run: |
          echo "${{ github.event.issue.body }}" > issue_body.txt
          
      - name: Debug print issue_body
        run: |
          echo "----- issue_body.txt -----"
          cat issue_body.txt
          echo "-------------------------"

      - name: Extract fields from issue
        id: extract
        run: |
          get_value() {
            awk -v key="### $1" '$0==key {getline; print $0}' issue_body.txt | xargs
          }
          EXISTING_ACCOUNT=$(get_value "existing-account")
          APP_NAME=$(get_value "app-name")
          APPLICATION=$(get_value "tag1")
          BUSINESS_UNIT=$(get_value "tag2")
          INFRA_SUPPORT=$(get_value "tag3")
          OWNER=$(get_value "tag4")
          SSO_GROUP=$(get_value "sso-group-name")
          # Add more as needed
          echo "EXISTING_ACCOUNT=$EXISTING_ACCOUNT" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "APPLICATION=$APPLICATION" >> $GITHUB_ENV
          echo "BUSINESS_UNIT=$BUSINESS_UNIT" >> $GITHUB_ENV
          echo "INFRA_SUPPORT=$INFRA_SUPPORT" >> $GITHUB_ENV
          echo "OWNER=$OWNER" >> $GITHUB_ENV
          echo "SSO_GROUP=$SSO_GROUP" >> $GITHUB_ENV
          echo "Extracted EXISTING_ACCOUNT: '$EXISTING_ACCOUNT'"
          echo "Extracted APP_NAME: '$APP_NAME'"
          echo "Extracted APPLICATION: '$APPLICATION'"
          echo "Extracted BUSINESS_UNIT: '$BUSINESS_UNIT'"
          echo "Extracted INFRA_SUPPORT: '$INFRA_SUPPORT'"
          echo "Extracted OWNER: '$OWNER'"
          echo "Extracted SSO_GROUP: '$SSO_GROUP'"
            
      - name: Debug extracted variables
        run: |
            echo "EXISTING_ACCOUNT=$EXISTING_ACCOUNT"
            echo "APP_NAME=$APP_NAME"
            
      - name: Print raw EXISTING_ACCOUNT
        run: |
            echo "Raw EXISTING_ACCOUNT: '$EXISTING_ACCOUNT'"
            
      - name: Debug extracted variables
        run: |
          env | grep -E 'EXISTING_ACCOUNT|APP_NAME|BUSINESS_UNIT|INFRA_SUPPORT|OWNER|SLACK_CHANNEL|CNI|SSO_GROUP|GO_LIVE_DATE'

      - name: Run create-account.py for new accounts
        if: env.EXISTING_ACCOUNT == 'No'
        run: |
          python scripts/create-account.py \
            "$APP_NAME" \
            "$BUSINESS_UNIT" \
            "$INFRA_SUPPORT" \
            "$OWNER" \
            "$SLACK_CHANNEL" \
            "$CNI" \
            "$SSO_GROUP" \
            "$GO_LIVE_DATE"

      - name: Run amend-accounts.py for existing accounts
        if: env.EXISTING_ACCOUNT == 'Yes'
        run: |
          python scripts/amend-accounts.py \
            "$APP_NAME" \
            # Add other arguments as needed for your amend script

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b env-request/${{ github.run_id }}
          git add environments/
          git commit -m "Automated environment request for $APP_NAME"
          git push --set-upstream origin env-request/${{ github.run_id }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: env-request/${{ github.run_id }}
          title: "Automated environment request for ${{ env.APP_NAME }}"
          body: "This PR was created automatically from an environment request issue."
          base: main
